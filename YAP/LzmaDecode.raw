{
Label LD0 = pA->newLabel();
Label LD1 = pA->newLabel();
Label LD2 = pA->newLabel();
pA->bind(LzmaDecode);
pA->push(r15);
pA->push(r14);
pA->push(r13);
pA->push(r12);
pA->push(rbp);
pA->push(rdi);
pA->push(rsi);
pA->push(rbx);
pA->sub(rsp, 0x0C8);
pA->mov(esi, 6);
pA->mov(rax, ptr(rsp, 0x108+0x40));
pA->mov(r14, ptr(rdx));
pA->mov(r13, ptr(rsp, 0x108+0x48));
pA->mov(rbp, r8);
pA->mov(r8, ptr(r9));
pA->mov(r12, rcx);
pA->mov(qword_ptr(r9), 0);
pA->mov(rdi, rdx);
pA->mov(qword_ptr(rdx), 0);
pA->mov(rbx, r9);
pA->mov(dword_ptr(rax), 0);
pA->mov(ptr(rsp, 0x108-0xD8), r8);
pA->cmp(r8, 4);
pA->strict();
pA->jbe(LD1);
pA->mov(esi, 4);
pA->mov(qword_ptr(rsp, 0x108-0xB0), 0);
pA->mov(qword_ptr(rsp, 0x108-0xC0), 0);
pA->cmp(dword_ptr(rsp, 0x108+0x30), 4);
pA->strict();
pA->jbe(LD1);
pA->mov(rax, ptr(rsp, 0x108+0x28));
pA->movzx(r15d, byte_ptr(rax));
pA->cmp(r15b, 0x0E0);
pA->strict();
pA->ja(LD1);
pA->mov(r9d, ptr(rax, 1));
pA->mov(eax, 0x39);
pA->mul(r15b);
pA->mov(ptr(rsp, 0x108-0xCC), r9d);
pA->mov(edx, eax);
pA->shr(dx, 9);
pA->mov(r11d, edx);
pA->mov(edx, r15d);
pA->mov(r15d, 0x300);
pA->lea(eax, dword_ptr(r11, r11, 3));
pA->sub(edx, eax);
pA->mov(eax, 0x0FFFFFFCD);
pA->mul(r11b);
pA->movzx(edx, dl);
pA->shr(ax, 0x0A);
pA->mov(esi, eax);
pA->mov(eax, r11d);
pA->lea(ecx, dword_ptr(rsi, rsi, 2));
pA->and_(esi, 7);
pA->sub(eax, ecx);
pA->shl(esi, 8);
pA->movzx(eax, al);
pA->lea(ecx, ptr(rdx, rax));
pA->or_(esi, eax);
pA->shl(r15d, cl);
pA->shl(esi, 8);
pA->mov(rcx, r13);
pA->add(r15d, 0x7C0);
pA->or_(esi, edx);
pA->mov(edx, 0);
pA->call(qword_ptr(r13, 8));
pA->mov(edx, r15d);
pA->mov(rcx, r13);
pA->mov(qword_ptr(rsp, 0x108-0xC0), 0);
pA->add(rdx, rdx);
pA->call(qword_ptr(r13));
pA->mov(ptr(rsp, 0x108-0xC0), rax);
pA->test(rax, rax);
pA->strict();
pA->jz(LD2);
pA->mov(r9d, ptr(rsp, 0x108-0xCC));
pA->add(rax, 0x0D00);
pA->mov(r8, ptr(rsp, 0x108-0xD8));
pA->mov(rdx, r14);
pA->mov(ptr(rsp, 0x108-0xB8), rax);
pA->mov(eax, 0x1000);
pA->lea(rcx, ptr(rsp, 0x108-0xC8));
pA->mov(ptr(rbx), r8);
pA->mov(r8, rbp);
pA->cmp(r9d, eax);
pA->strict();
pA->cmovb(r9d, eax);
pA->mov(rax, ptr(rsp, 0x108+0x40));
pA->mov(ptr(rsp, 0x108-0xC8), esi);
pA->mov(ptr(rsp, 0x108-0x68), r15d);
pA->mov(ptr(rsp, 0x108-0xE0), rax);
pA->mov(eax, ptr(rsp, 0x108+0x38));
pA->mov(ptr(rsp, 0x108-0xC4), r9d);
pA->mov(r9, rbx);
pA->mov(ptr(rsp, 0x108-0xE8), eax);
pA->mov(ptr(rsp, 0x108-0xB0), r12);
pA->mov(ptr(rsp, 0x108-0xA8), r14);
pA->mov(qword_ptr(rsp, 0x108-0xA0), 0);
pA->mov(dword_ptr(rsp, 0x108-0x64), 0);
pA->mov(qword_ptr(rsp, 0x108-0x88), 0);
pA->mov(dword_ptr(rsp, 0x108-0x6C), 0x114);
pA->call(LzmaDec_DecodeToDic);
pA->mov(esi, eax);
pA->mov(rax, ptr(rsp, 0x108-0xA0));
pA->mov(ptr(rdi), rax);
pA->test(esi, esi);
pA->strict();
pA->jnz(LD0);
pA->mov(rax, ptr(rsp, 0x108+0x40));
pA->push(rsi);
pA->mov(esi, 6);
pA->cmp(dword_ptr(rax), 3);
pA->strict();
pA->cmovnz(esi, ptr(rsp));
pA->add(rsp, 8);
pA->mov(eax, 6);
pA->bind(LD0);
pA->mov(rdx, ptr(rsp, 0x108-0xC0));
pA->mov(rcx, r13);
pA->call(qword_ptr(r13, 8));
pA->bind(LD1);
pA->mov(eax, esi);
pA->add(rsp, 0x0C8);
pA->pop(rbx);
pA->pop(rsi);
pA->pop(rdi);
pA->pop(rbp);
pA->pop(r12);
pA->pop(r13);
pA->pop(r14);
pA->pop(r15);
pA->ret();
pA->bind(LD2);
pA->mov(esi, 2);
pA->jmp(LD1);
}